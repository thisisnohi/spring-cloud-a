<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>nohi.demo</groupId>
	<artifactId>microservice-discovery-eureka</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>microservice-discovery-eureka</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>nohi.demo</groupId>
		<artifactId>spring-cloud-a</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka-server</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- docker的maven插件，官网：https://github.com/spotify/docker-maven-plugin -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.12</version>
				<configuration>
					<!-- 注意imageName一定要是符合正则[a-z0-9-_.]的，否则构建不会成功 -->
					<!-- 详见：https://github.com/spotify/dockermaven-plugin Invalid repository name ... only [a-z0-9-_.] are
                    allowed-->
					<imageName>microservice-discovery-eureka</imageName>
					<baseImage>java</baseImage>
					<entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
<!--
1. CentOS7: /usr/lib/systemd/system/docker.service
    修改一行:ExecStart=/usr/bin/dockerd  -H tcp://0.0.0.0:2375  -H unix:///var/run/docker.sock
2. 重启Docker
3. 测试
    在本机 curl http://127.0.0.1:2375/info
    在其他机器上：curl http://hostanme:2375/info
4.设置环境变量 set DOCKER_HOST=tcp://192.168.56.101:2375
5. mvn clean package docker:build -DskipTests
6. 查看docker　images是否完成
7. dk run -p 8761:8761 microservice-discovery-eureka
8. 访问 http://192.168.56.101:8761/
-->
